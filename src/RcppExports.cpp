// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_colour_num_value_string_palette_hex
Rcpp::StringVector rcpp_colour_num_value_string_palette_hex(Rcpp::NumericVector x, std::string palette, std::string na_colour, Rcpp::NumericVector alpha, bool include_alpha);
RcppExport SEXP _colourvalues_rcpp_colour_num_value_string_palette_hex(SEXP xSEXP, SEXP paletteSEXP, SEXP na_colourSEXP, SEXP alphaSEXP, SEXP include_alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type palette(paletteSEXP);
    Rcpp::traits::input_parameter< std::string >::type na_colour(na_colourSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< bool >::type include_alpha(include_alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_colour_num_value_string_palette_hex(x, palette, na_colour, alpha, include_alpha));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_colour_num_value_rgb_palette_hex
Rcpp::StringVector rcpp_colour_num_value_rgb_palette_hex(Rcpp::NumericVector x, Rcpp::NumericMatrix palette, std::string na_colour, bool include_alpha);
RcppExport SEXP _colourvalues_rcpp_colour_num_value_rgb_palette_hex(SEXP xSEXP, SEXP paletteSEXP, SEXP na_colourSEXP, SEXP include_alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type palette(paletteSEXP);
    Rcpp::traits::input_parameter< std::string >::type na_colour(na_colourSEXP);
    Rcpp::traits::input_parameter< bool >::type include_alpha(include_alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_colour_num_value_rgb_palette_hex(x, palette, na_colour, include_alpha));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_colour_str_value_string_palette_hex
Rcpp::StringVector rcpp_colour_str_value_string_palette_hex(Rcpp::StringVector x, std::string palette, std::string na_colour, Rcpp::NumericVector alpha, bool include_alpha);
RcppExport SEXP _colourvalues_rcpp_colour_str_value_string_palette_hex(SEXP xSEXP, SEXP paletteSEXP, SEXP na_colourSEXP, SEXP alphaSEXP, SEXP include_alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type palette(paletteSEXP);
    Rcpp::traits::input_parameter< std::string >::type na_colour(na_colourSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< bool >::type include_alpha(include_alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_colour_str_value_string_palette_hex(x, palette, na_colour, alpha, include_alpha));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_colour_str_value_rgb_palette_hex
Rcpp::StringVector rcpp_colour_str_value_rgb_palette_hex(Rcpp::StringVector x, Rcpp::NumericMatrix palette, std::string na_colour, bool include_alpha);
RcppExport SEXP _colourvalues_rcpp_colour_str_value_rgb_palette_hex(SEXP xSEXP, SEXP paletteSEXP, SEXP na_colourSEXP, SEXP include_alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type palette(paletteSEXP);
    Rcpp::traits::input_parameter< std::string >::type na_colour(na_colourSEXP);
    Rcpp::traits::input_parameter< bool >::type include_alpha(include_alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_colour_str_value_rgb_palette_hex(x, palette, na_colour, include_alpha));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_colour_num_value_string_palette_rgb
Rcpp::NumericMatrix rcpp_colour_num_value_string_palette_rgb(Rcpp::NumericVector x, std::string palette, std::string na_colour, Rcpp::NumericVector alpha, bool include_alpha);
RcppExport SEXP _colourvalues_rcpp_colour_num_value_string_palette_rgb(SEXP xSEXP, SEXP paletteSEXP, SEXP na_colourSEXP, SEXP alphaSEXP, SEXP include_alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type palette(paletteSEXP);
    Rcpp::traits::input_parameter< std::string >::type na_colour(na_colourSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< bool >::type include_alpha(include_alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_colour_num_value_string_palette_rgb(x, palette, na_colour, alpha, include_alpha));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_colour_num_value_rgb_palette_rgb
Rcpp::NumericMatrix rcpp_colour_num_value_rgb_palette_rgb(Rcpp::NumericVector x, Rcpp::NumericMatrix palette, std::string na_colour, bool include_alpha);
RcppExport SEXP _colourvalues_rcpp_colour_num_value_rgb_palette_rgb(SEXP xSEXP, SEXP paletteSEXP, SEXP na_colourSEXP, SEXP include_alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type palette(paletteSEXP);
    Rcpp::traits::input_parameter< std::string >::type na_colour(na_colourSEXP);
    Rcpp::traits::input_parameter< bool >::type include_alpha(include_alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_colour_num_value_rgb_palette_rgb(x, palette, na_colour, include_alpha));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_colour_str_value_string_palette_rgb
Rcpp::NumericMatrix rcpp_colour_str_value_string_palette_rgb(Rcpp::StringVector x, std::string palette, std::string na_colour, Rcpp::NumericVector alpha, bool include_alpha);
RcppExport SEXP _colourvalues_rcpp_colour_str_value_string_palette_rgb(SEXP xSEXP, SEXP paletteSEXP, SEXP na_colourSEXP, SEXP alphaSEXP, SEXP include_alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type palette(paletteSEXP);
    Rcpp::traits::input_parameter< std::string >::type na_colour(na_colourSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< bool >::type include_alpha(include_alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_colour_str_value_string_palette_rgb(x, palette, na_colour, alpha, include_alpha));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_colour_str_value_rgb_palette_rgb
Rcpp::NumericMatrix rcpp_colour_str_value_rgb_palette_rgb(Rcpp::StringVector x, Rcpp::NumericMatrix palette, std::string na_colour, bool include_alpha);
RcppExport SEXP _colourvalues_rcpp_colour_str_value_rgb_palette_rgb(SEXP xSEXP, SEXP paletteSEXP, SEXP na_colourSEXP, SEXP include_alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type palette(paletteSEXP);
    Rcpp::traits::input_parameter< std::string >::type na_colour(na_colourSEXP);
    Rcpp::traits::input_parameter< bool >::type include_alpha(include_alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_colour_str_value_rgb_palette_rgb(x, palette, na_colour, include_alpha));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_viridis
Rcpp::DataFrame rcpp_viridis();
RcppExport SEXP _colourvalues_rcpp_viridis() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_viridis());
    return rcpp_result_gen;
END_RCPP
}
// rcpp_inferno
Rcpp::DataFrame rcpp_inferno();
RcppExport SEXP _colourvalues_rcpp_inferno() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_inferno());
    return rcpp_result_gen;
END_RCPP
}
// rcpp_magma
Rcpp::DataFrame rcpp_magma();
RcppExport SEXP _colourvalues_rcpp_magma() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_magma());
    return rcpp_result_gen;
END_RCPP
}
// rcpp_plasma
Rcpp::DataFrame rcpp_plasma();
RcppExport SEXP _colourvalues_rcpp_plasma() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_plasma());
    return rcpp_result_gen;
END_RCPP
}
// rcpp_cividis
Rcpp::DataFrame rcpp_cividis();
RcppExport SEXP _colourvalues_rcpp_cividis() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_cividis());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_colourvalues_rcpp_colour_num_value_string_palette_hex", (DL_FUNC) &_colourvalues_rcpp_colour_num_value_string_palette_hex, 5},
    {"_colourvalues_rcpp_colour_num_value_rgb_palette_hex", (DL_FUNC) &_colourvalues_rcpp_colour_num_value_rgb_palette_hex, 4},
    {"_colourvalues_rcpp_colour_str_value_string_palette_hex", (DL_FUNC) &_colourvalues_rcpp_colour_str_value_string_palette_hex, 5},
    {"_colourvalues_rcpp_colour_str_value_rgb_palette_hex", (DL_FUNC) &_colourvalues_rcpp_colour_str_value_rgb_palette_hex, 4},
    {"_colourvalues_rcpp_colour_num_value_string_palette_rgb", (DL_FUNC) &_colourvalues_rcpp_colour_num_value_string_palette_rgb, 5},
    {"_colourvalues_rcpp_colour_num_value_rgb_palette_rgb", (DL_FUNC) &_colourvalues_rcpp_colour_num_value_rgb_palette_rgb, 4},
    {"_colourvalues_rcpp_colour_str_value_string_palette_rgb", (DL_FUNC) &_colourvalues_rcpp_colour_str_value_string_palette_rgb, 5},
    {"_colourvalues_rcpp_colour_str_value_rgb_palette_rgb", (DL_FUNC) &_colourvalues_rcpp_colour_str_value_rgb_palette_rgb, 4},
    {"_colourvalues_rcpp_viridis", (DL_FUNC) &_colourvalues_rcpp_viridis, 0},
    {"_colourvalues_rcpp_inferno", (DL_FUNC) &_colourvalues_rcpp_inferno, 0},
    {"_colourvalues_rcpp_magma", (DL_FUNC) &_colourvalues_rcpp_magma, 0},
    {"_colourvalues_rcpp_plasma", (DL_FUNC) &_colourvalues_rcpp_plasma, 0},
    {"_colourvalues_rcpp_cividis", (DL_FUNC) &_colourvalues_rcpp_cividis, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_colourvalues(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
